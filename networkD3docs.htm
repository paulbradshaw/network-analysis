<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

<meta charset="utf-8">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="pandoc" />

<meta name="viewport" content="width=device-width, initial-scale=1">



<title></title>

<script src="index_files/htmlwidgets-0.7/htmlwidgets.js"></script>
<script src="index_files/d3-3.5.2/d3.min.js"></script>
<script src="index_files/simpleNetwork-binding-0.2.13/simpleNetwork.js"></script>
<script src="index_files/forceNetwork-binding-0.2.13/forceNetwork.js"></script>
<script src="index_files/sankey-1/sankey.js"></script>
<script src="index_files/sankeyNetwork-binding-0.2.13/sankeyNetwork.js"></script>
<script src="index_files/radialNetwork-binding-0.2.13/radialNetwork.js"></script>
<script src="index_files/diagonalNetwork-binding-0.2.13/diagonalNetwork.js"></script>
<script src="index_files/dendroNetwork-binding-0.2.13/dendroNetwork.js"></script>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<title>networkD3</title>
<meta name="networkD3Vignette" content="networkD3: Tools for creating D3 JavaScript network graphs from R">
<LINK href="css/main.css" rel="stylesheet">
<LINK href="css/images.css" rel="stylesheet">
<LINK href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">


<style type="text/css">code{white-space: pre;}</style>
<style type="text/css">
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; background-color: #dddddd; }
td.sourceCode { padding-left: 5px; }
code > span.kw { font-weight: bold; } /* Keyword */
code > span.dt { color: #800000; } /* DataType */
code > span.dv { color: #0000ff; } /* DecVal */
code > span.bn { color: #0000ff; } /* BaseN */
code > span.fl { color: #800080; } /* Float */
code > span.ch { color: #ff00ff; } /* Char */
code > span.st { color: #dd0000; } /* String */
code > span.co { color: #808080; font-style: italic; } /* Comment */
code > span.al { color: #00ff00; font-weight: bold; } /* Alert */
code > span.fu { color: #000080; } /* Function */
code > span.er { color: #ff0000; font-weight: bold; } /* Error */
code > span.wa { color: #ff0000; font-weight: bold; } /* Warning */
code > span.cn { color: #000000; } /* Constant */
code > span.sc { color: #ff00ff; } /* SpecialChar */
code > span.vs { color: #dd0000; } /* VerbatimString */
code > span.ss { color: #dd0000; } /* SpecialString */
code > span.im { } /* Import */
code > span.va { } /* Variable */
code > span.cf { } /* ControlFlow */
code > span.op { } /* Operator */
code > span.bu { } /* BuiltIn */
code > span.ex { } /* Extension */
code > span.pp { font-weight: bold; } /* Preprocessor */
code > span.at { } /* Attribute */
code > span.do { color: #808080; font-style: italic; } /* Documentation */
code > span.an { color: #808080; font-weight: bold; font-style: italic; } /* Annotation */
code > span.cv { color: #808080; font-weight: bold; font-style: italic; } /* CommentVar */
code > span.in { color: #808080; font-weight: bold; font-style: italic; } /* Information */
</style>




</head>

<body>







<!-- Header -->
<div class="rect1">

</div>
<div class="topbar">
<code>networkD3</code>:
</div>
<div class="topbarsub">
D3 JavaScript Network Graphs from R
</div>
<div class="rect1">

</div>
<p class="pull-right">
<strong> Fork me on <a href="https://github.com/christophergandrud/networkD3"><i class="fa fa-github fa-lg"></i></a> </strong>
</p>
<p>v0.2.13 <a href="http://cran.r-project.org/package=networkD3"><img src="http://www.r-pkg.org/badges/version/networkD3" alt="CRAN Version" /></a></p>
<p class="pull-right">
<strong> Issues/suggestions <a href="https://github.com/christophergandrud/networkD3/issues"><i class="fa fa-exclamation-circle"></i></a> </strong>
</p>
<p><a href="http://christophergandrud.blogspot.com/">Christopher Gandrud</a>, <a href="https://github.com/jjallaire">JJ Allaire</a>, &amp; <a href="http://buildingwidgets.com">Kent Russell</a></p>
<p>2016-08-11</p>
<!-- Banner image -->
<div class="rect1">

</div>
<div class="circlel">

</div>
<div class="circlel">

</div>
<div class="circlel">

</div>
<div class="circlel">

</div>
<div class="circlel">

</div>
<div class="circler">

</div>
<div class="circler">

</div>
<div class="circler">

</div>
<div class="circler">

</div>
<div class="circler">

</div>
<p><br><br><br><br><br></p>
<!-- About -->
<h2>
<i class="fa fa-thumb-tack"></i> About
</h2>
<p>This is a port of Christopher Gandrud’s R package <a href="http://christophergandrud.github.io/d3Network/">d3Network</a> for creating <a href="http://d3js.org/">D3</a> network graphs to the <a href="https://github.com/ramnathv/htmlwidgets">htmlwidgets</a> framework. The htmlwidgets framework greatly simplifies the package’s syntax for exporting the graphs, improves integration with <a href="http://www.rstudio.com/">RStudio’s</a> Viewer Pane, <a href="http://rmarkdown.rstudio.com/">RMarkdown</a>, and <a href="http://shiny.rstudio.com/">Shiny web apps</a>. See <a href="#networkD3output">below</a> for examples.</p>
<p>It currently supports three types of network graphs:</p>
<ul>
<li><p><strong>Force directed networks</strong> with <a href="#simple"><code>simpleNetwork</code></a> and <a href="#force"><code>forceNetwork</code></a></p></li>
<li><p><strong>Sankey diagrams</strong> with <a href="#sankey"><code>sankeyNetwork</code></a></p></li>
<li><p><strong><a href="http://bl.ocks.org/mbostock/4339184">Reingold-Tilford Tree graphs</a></strong> with <code>treeNetwork</code></p></li>
</ul>
<!-- Install -->
<h2>
<i class="fa fa-download"></i> Install
</h2>
<p><strong>networkD3</strong> works very well with the most recent version of <a href="http://www.rstudio.com/rstudio">RStudio</a> (&gt;=v0.99, <a href="http://www.rstudio.com/products/rstudio/download/preview/">download</a>). When you use this version of RStudio, graphs will appear in the Viewer Pane. Not only does this give you a handy way of seeing and tweaking your graphs, but you can also export the graphs to the clipboard or a PNG/JPEG/TIFF/etc. file.</p>
<p>The package can be downloaded from <a href="http://cran.r-project.org/web/packages/networkD3/index.html">CRAN</a>.</p>
<!-- Usage  -->
<h2>
<i class="fa fa-code"></i> Usage
</h2>
<p>For a full set of examples for each of the functions see <a href="https://github.com/christophergandrud/networkD3/blob/master/inst/examples/examples.R">this page</a>.</p>
<p><strong>Note:</strong> You are probably used to R’s 1-based numbering (i.e. counting in R starts from 1). However, <strong>networkD3</strong> plots are created using JavaScript, which is <a href="http://en.wikipedia.org/wiki/Zero-based_numbering">0-based</a>. So, your data links will need to start from 0. See <a href="https://raw.githubusercontent.com/christophergandrud/networkD3/master/JSONdata/energy.json">this data set</a> for example. You can also use <a href="http://igraph.org/r/">igraph</a> to build your graph data and then use the <a href="#igraph"><code>igraph_to_networkD3</code></a> function to convert this data to a suitable object for <strong>networkD3</strong> plotting.</p>
<a href="#simple">
<h3 id="simple">
<code>&gt; </code>simpleNetwork</code>
</h3>
<p></a></p>
<p>For very basic <a href="http://en.wikipedia.org/wiki/Force-directed_graph_drawing">force directed network</a> graphics you can use <code>simpleNetwork</code>. For example:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># Load package</span>
<span class="kw">library</span>(networkD3)

<span class="co"># Create fake data</span>
src &lt;-<span class="st"> </span><span class="kw">c</span>(<span class="st">&quot;A&quot;</span>, <span class="st">&quot;A&quot;</span>, <span class="st">&quot;A&quot;</span>, <span class="st">&quot;A&quot;</span>,
        <span class="st">&quot;B&quot;</span>, <span class="st">&quot;B&quot;</span>, <span class="st">&quot;C&quot;</span>, <span class="st">&quot;C&quot;</span>, <span class="st">&quot;D&quot;</span>)
target &lt;-<span class="st"> </span><span class="kw">c</span>(<span class="st">&quot;B&quot;</span>, <span class="st">&quot;C&quot;</span>, <span class="st">&quot;D&quot;</span>, <span class="st">&quot;J&quot;</span>,
            <span class="st">&quot;E&quot;</span>, <span class="st">&quot;F&quot;</span>, <span class="st">&quot;G&quot;</span>, <span class="st">&quot;H&quot;</span>, <span class="st">&quot;I&quot;</span>)
networkData &lt;-<span class="st"> </span><span class="kw">data.frame</span>(src, target)

<span class="co"># Plot</span>
<span class="kw">simpleNetwork</span>(networkData)</code></pre></div>
<div id="htmlwidget-685571f3e8f316d091b4" style="width:672px;height:480px;" class="simpleNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-685571f3e8f316d091b4">{"x":{"links":{"source":["A","A","A","A","B","B","C","C","D"],"target":["B","C","D","J","E","F","G","H","I"]},"options":{"linkDistance":50,"charge":-200,"fontSize":7,"fontFamily":"serif","linkColour":"#666","nodeColour":"#3182bd","nodeClickColour":"#E34A33","textColour":"#3182bd","opacity":0.6,"zoom":false}},"evals":[],"jsHooks":[]}</script>
<a href="force">
<h3 id="force">
<code>&gt; forceNetwork</code>
</h3>
<p></a></p>
<p>Use <code>forceNetwork</code> to have more control over the appearance of the forced directed network and to plot more complicated networks. Here is an example:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># Load data</span>
<span class="kw">data</span>(MisLinks)
<span class="kw">data</span>(MisNodes)

<span class="co"># Plot</span>
<span class="kw">forceNetwork</span>(<span class="dt">Links =</span> MisLinks, <span class="dt">Nodes =</span> MisNodes,
            <span class="dt">Source =</span> <span class="st">&quot;source&quot;</span>, <span class="dt">Target =</span> <span class="st">&quot;target&quot;</span>,
            <span class="dt">Value =</span> <span class="st">&quot;value&quot;</span>, <span class="dt">NodeID =</span> <span class="st">&quot;name&quot;</span>,
            <span class="dt">Group =</span> <span class="st">&quot;group&quot;</span>, <span class="dt">opacity =</span> <span class="fl">0.8</span>)</code></pre></div>
<div id="htmlwidget-b9e7f8bc81ee9ac071f7" style="width:672px;height:480px;" class="forceNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-b9e7f8bc81ee9ac071f7">{"x":{"links":{"source":[1,2,3,3,4,5,6,7,8,9,11,11,11,11,12,13,14,15,17,18,18,19,19,19,20,20,20,20,21,21,21,21,21,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,25,25,25,26,26,26,26,27,27,27,27,27,28,28,29,29,29,30,31,31,31,31,32,33,33,34,34,35,35,35,36,36,36,36,37,37,37,37,37,38,38,38,38,38,38,39,40,41,41,42,42,42,43,43,43,44,44,45,47,48,48,48,48,49,49,50,50,51,51,51,52,52,53,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,57,57,57,58,58,58,58,58,59,59,59,59,60,60,60,61,61,61,61,61,61,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,67,68,68,68,68,68,68,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,72,72,72,73,74,74,75,75,75,75,75,75,75,76,76,76,76,76,76,76],"target":[0,0,0,2,0,0,0,0,0,0,10,3,2,0,11,11,11,11,16,16,17,16,17,18,16,17,18,19,16,17,18,19,20,16,17,18,19,20,21,16,17,18,19,20,21,22,12,11,23,11,24,23,11,24,11,16,25,11,23,25,24,26,11,27,23,27,11,23,30,11,23,27,11,11,27,11,29,11,34,29,34,35,11,29,34,35,36,11,29,34,35,36,37,11,29,25,25,24,25,41,25,24,11,26,27,28,11,28,46,47,25,27,11,26,11,49,24,49,26,11,51,39,51,51,49,26,51,49,39,54,26,11,16,25,41,48,49,55,55,41,48,55,48,27,57,11,58,55,48,57,48,58,59,48,58,60,59,57,55,55,58,59,48,57,41,61,60,59,48,62,57,58,61,60,55,55,62,48,63,58,61,60,59,57,11,63,64,48,62,58,61,60,59,57,55,64,58,59,62,65,48,63,61,60,57,25,11,24,27,48,41,25,68,11,24,27,48,41,25,69,68,11,24,27,41,58,27,69,68,70,11,48,41,25,26,27,11,48,48,73,69,68,25,48,41,70,71,64,65,66,63,62,48,58],"value":[1,8,10,6,1,1,1,1,2,1,1,3,3,5,1,1,1,1,4,4,4,4,4,4,3,3,3,4,3,3,3,3,5,3,3,3,3,4,4,3,3,3,3,4,4,4,2,9,2,7,13,1,12,4,31,1,1,17,5,5,1,1,8,1,1,1,2,1,2,3,2,1,1,2,1,3,2,3,3,2,2,2,2,1,2,2,2,2,1,2,2,2,2,2,1,1,1,2,3,2,2,1,3,1,1,3,1,2,1,2,1,1,1,3,2,1,1,9,2,2,1,1,1,2,1,1,6,12,1,1,21,19,1,2,5,4,1,1,1,1,1,7,7,6,1,4,15,5,6,2,1,4,2,2,6,2,5,1,1,9,17,13,7,2,1,6,3,5,5,6,2,4,3,2,1,5,12,5,4,10,6,2,9,1,1,5,7,3,5,5,5,2,5,1,2,3,3,1,2,2,1,1,1,1,3,5,1,1,1,1,1,6,6,1,1,2,1,1,4,4,4,1,1,1,1,1,1,2,2,2,1,1,1,1,2,1,1,2,2,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],"colour},"nodes":{"name":["Myriel","Napoleon","Mlle.Baptistine","Mme.Magloire","CountessdeLo","Geborand","Champtercier","Cravatte","Count","OldMan","Labarre","Valjean","Marguerite","Mme.deR","Isabeau","Gervais","Tholomyes","Listolier","Fameuil","Blacheville","Favourite","Dahlia","Zephine","Fantine","Mme.Thenardier","Thenardier","Cosette","Javert","Fauchelevent","Bamatabois","Perpetue","Simplice","Scaufflaire","Woman1","Judge","Champmathieu","Brevet","Chenildieu","Cochepaille","Pontmercy","Boulatruelle","Eponine","Anzelma","Woman2","MotherInnocent","Gribier","Jondrette","Mme.Burgon","Gavroche","Gillenormand","Magnon","Mlle.Gillenormand","Mme.Pontmercy","Mlle.Vaubois","Lt.Gillenormand","Marius","BaronessT","Mabeuf","Enjolras","Combeferre","Prouvaire","Feuilly","Courfeyrac","Bahorel","Bossuet","Joly","Grantaire","MotherPlutarch","Gueulemer","Babet","Claquesous","Montparnasse","Toussaint","Child1","Child2","Brujon","Mme.Hucheloup"],"group":[1,1,1,1,1,1,1,1,1,1,2,2,3,2,2,2,3,3,3,3,3,3,3,3,4,4,5,4,0,2,3,2,2,2,2,2,2,2,2,4,6,4,4,5,0,0,7,7,8,5,5,5,5,5,5,8,5,8,8,8,8,8,8,8,8,8,8,9,4,4,4,4,5,10,10,4,8]},"options":{"NodeID":"name","Group":"group","colourScale":"d3.scale.category20()","fontSize":7,"fontFamily":"serif","clickTextSize":17.5,"linkDistance":50,"linkWidth":"function(d) { return Math.sqrt(d.value); }","charge":-120,"opacity":0.8,"zoom":false,"legend":false,"nodesize":false,"radiusCalculation":" Math.sqrt(d.nodesize)+6","bounded":false,"opacityNoHover":0,"clickAction":null}},"evals":[],"jsHooks":[]}</script>
<p>From version 0.1.3 you can also allow scroll-wheel zooming by setting <code>zoom = TRUE</code>.</p>
<a href="#sankey">
<h3 id="sankey">
<code>&gt; sankeyNetwork</code>
</h3>
<p></a></p>
<p>You can also create <a href="http://en.wikipedia.org/wiki/Sankey_diagram">Sankey diagrams</a> with <code>sankeyNetwork</code>. Here is an example using downloaded JSON data:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># Load energy projection data</span>
<span class="co"># Load energy projection data</span>
URL &lt;-<span class="st"> </span><span class="kw">paste0</span>(
        <span class="st">&quot;https://cdn.rawgit.com/christophergandrud/networkD3/&quot;</span>,
        <span class="st">&quot;master/JSONdata/energy.json&quot;</span>)
Energy &lt;-<span class="st"> </span>jsonlite::<span class="kw">fromJSON</span>(URL)
<span class="co"># Plot</span>
<span class="kw">sankeyNetwork</span>(<span class="dt">Links =</span> Energy$links, <span class="dt">Nodes =</span> Energy$nodes, <span class="dt">Source =</span> <span class="st">&quot;source&quot;</span>,
             <span class="dt">Target =</span> <span class="st">&quot;target&quot;</span>, <span class="dt">Value =</span> <span class="st">&quot;value&quot;</span>, <span class="dt">NodeID =</span> <span class="st">&quot;name&quot;</span>,
             <span class="dt">units =</span> <span class="st">&quot;TWh&quot;</span>, <span class="dt">fontSize =</span> <span class="dv">12</span>, <span class="dt">nodeWidth =</span> <span class="dv">30</span>)</code></pre></div>
<div id="htmlwidget-632411859a748a1f359f" style="width:672px;height:480px;" class="sankeyNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-632411859a748a1f359f">{"x":{"links":{"source":[0,1,1,1,1,6,7,8,10,9,11,11,11,15,15,15,15,15,15,15,15,15,15,15,23,25,5,5,5,5,5,27,17,17,28,29,2,2,2,2,2,2,2,2,34,24,35,36,38,37,39,39,40,40,41,42,43,43,4,4,4,26,26,26,44,45,46,47],"target":[1,2,3,4,5,2,4,9,9,4,12,13,14,16,14,17,12,18,19,13,3,20,21,22,24,24,13,3,26,19,12,15,28,3,18,15,12,30,18,31,32,19,33,20,1,5,26,37,37,2,4,1,14,13,15,14,42,41,19,26,12,15,3,11,15,1,15,15],"value":[124.729,0.597,26.862,280.322,81.144,35,35,11.606,63.965,75.571,10.639,22.505,46.184,104.453,113.726,27.14,342.165,37.797,4.412,40.858,56.691,7.863,90.008,93.494,40.719,82.233,0.129,1.401,151.891,2.096,48.58,7.013,20.897,6.242,20.897,6.995,121.066,128.69,135.835,14.458,206.267,3.64,33.218,4.413,4.375,122.952,839.978,504.287,107.703,611.99,56.587,77.81,193.026,70.672,59.901,19.263,19.263,59.901,0.882,400.12,46.477,525.531,787.129,79.329,9.452,182.01,19.013,289.366]},"nodes":{"name":["Agricultural 'waste'","Bio-conversion","Liquid","Losses","Solid","Gas","Biofuel imports","Biomass imports","Coal imports","Coal","Coal reserves","District heating","Industry","Heating and cooling - commercial","Heating and cooling - homes","Electricity grid","Over generation / exports","H2 conversion","Road transport","Agriculture","Rail transport","Lighting & appliances - commercial","Lighting & appliances - homes","Gas imports","Ngas","Gas reserves","Thermal generation","Geothermal","H2","Hydro","International shipping","Domestic aviation","International aviation","National navigation","Marine algae","Nuclear","Oil imports","Oil","Oil reserves","Other waste","Pumped heat","Solar PV","Solar Thermal","Solar","Tidal","UK land based bioenergy","Wave","Wind"],"group":["Agricultural 'waste'","Bio-conversion","Liquid","Losses","Solid","Gas","Biofuel imports","Biomass imports","Coal imports","Coal","Coal reserves","District heating","Industry","Heating and cooling - commercial","Heating and cooling - homes","Electricity grid","Over generation / exports","H2 conversion","Road transport","Agriculture","Rail transport","Lighting & appliances - commercial","Lighting & appliances - homes","Gas imports","Ngas","Gas reserves","Thermal generation","Geothermal","H2","Hydro","International shipping","Domestic aviation","International aviation","National navigation","Marine algae","Nuclear","Oil imports","Oil","Oil reserves","Other waste","Pumped heat","Solar PV","Solar Thermal","Solar","Tidal","UK land based bioenergy","Wave","Wind"]},"options":{"NodeID":"name","NodeGroup":"name","LinkGroup":null,"colourScale":"d3.scale.category20()","fontSize":12,"fontFamily":null,"nodeWidth":30,"nodePadding":10,"units":"TWh","margin":{"top":null,"right":null,"bottom":null,"left":null},"iterations":32}},"evals":[],"jsHooks":[]}</script>
<a href="#sankey">
<h3 id="sankey">
<code>&gt; radialNetwork</code>
</h3>
<p></a></p>
<p>From version 0.2, tree diagrams can be created using <code>radialNetwork</code> or <code>diagonalNetwork</code>.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">URL &lt;-<span class="st"> </span><span class="kw">paste0</span>(
        <span class="st">&quot;https://cdn.rawgit.com/christophergandrud/networkD3/&quot;</span>,
        <span class="st">&quot;master/JSONdata/flare.json&quot;</span>)

## Convert to list format
Flare &lt;-<span class="st"> </span>jsonlite::<span class="kw">fromJSON</span>(URL, <span class="dt">simplifyDataFrame =</span> <span class="ot">FALSE</span>)

<span class="co"># Use subset of data for more readable diagram</span>
Flare$children =<span class="st"> </span>Flare$children[<span class="dv">1</span>:<span class="dv">3</span>]

<span class="kw">radialNetwork</span>(<span class="dt">List =</span> Flare, <span class="dt">fontSize =</span> <span class="dv">10</span>, <span class="dt">opacity =</span> <span class="fl">0.9</span>)</code></pre></div>
<div id="htmlwidget-2e7591a87a98d4e4ccf5" style="width:672px;height:480px;" class="radialNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-2e7591a87a98d4e4ccf5">{"x":{"root":{"name":"flare","children":[{"name":"analytics","children":[{"name":"cluster","children":[{"name":"AgglomerativeCluster","size":3938},{"name":"CommunityStructure","size":3812},{"name":"HierarchicalCluster","size":6714},{"name":"MergeEdge","size":743}]},{"name":"graph","children":[{"name":"BetweennessCentrality","size":3534},{"name":"LinkDistance","size":5731},{"name":"MaxFlowMinCut","size":7840},{"name":"ShortestPaths","size":5914},{"name":"SpanningTree","size":3416}]},{"name":"optimization","children":[{"name":"AspectRatioBanker","size":7074}]}]},{"name":"animate","children":[{"name":"Easing","size":17010},{"name":"FunctionSequence","size":5842},{"name":"interpolate","children":[{"name":"ArrayInterpolator","size":1983},{"name":"ColorInterpolator","size":2047},{"name":"DateInterpolator","size":1375},{"name":"Interpolator","size":8746},{"name":"MatrixInterpolator","size":2202},{"name":"NumberInterpolator","size":1382},{"name":"ObjectInterpolator","size":1629},{"name":"PointInterpolator","size":1675},{"name":"RectangleInterpolator","size":2042}]},{"name":"ISchedulable","size":1041},{"name":"Parallel","size":5176},{"name":"Pause","size":449},{"name":"Scheduler","size":5593},{"name":"Sequence","size":5534},{"name":"Transition","size":9201},{"name":"Transitioner","size":19975},{"name":"TransitionEvent","size":1116},{"name":"Tween","size":6006}]},{"name":"data","children":[{"name":"converters","children":[{"name":"Converters","size":721},{"name":"DelimitedTextConverter","size":4294},{"name":"GraphMLConverter","size":9800},{"name":"IDataConverter","size":1314},{"name":"JSONConverter","size":2220}]},{"name":"DataField","size":1759},{"name":"DataSchema","size":2165},{"name":"DataSet","size":586},{"name":"DataSource","size":3331},{"name":"DataTable","size":772},{"name":"DataUtil","size":3322}]}]},"options":{"height":null,"width":null,"fontSize":10,"fontFamily":"serif","linkColour":"#ccc","nodeColour":"#fff","nodeStroke":"steelblue","textColour":"#111","margin":{"top":null,"right":null,"bottom":null,"left":null},"opacity":0.9}},"evals":[],"jsHooks":[]}</script>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">diagonalNetwork</span>(<span class="dt">List =</span> Flare, <span class="dt">fontSize =</span> <span class="dv">10</span>, <span class="dt">opacity =</span> <span class="fl">0.9</span>)</code></pre></div>
<div id="htmlwidget-e202f7d387f31d1bf7d8" style="width:672px;height:480px;" class="diagonalNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-e202f7d387f31d1bf7d8">{"x":{"root":{"name":"flare","children":[{"name":"analytics","children":[{"name":"cluster","children":[{"name":"AgglomerativeCluster","size":3938},{"name":"CommunityStructure","size":3812},{"name":"HierarchicalCluster","size":6714},{"name":"MergeEdge","size":743}]},{"name":"graph","children":[{"name":"BetweennessCentrality","size":3534},{"name":"LinkDistance","size":5731},{"name":"MaxFlowMinCut","size":7840},{"name":"ShortestPaths","size":5914},{"name":"SpanningTree","size":3416}]},{"name":"optimization","children":[{"name":"AspectRatioBanker","size":7074}]}]},{"name":"animate","children":[{"name":"Easing","size":17010},{"name":"FunctionSequence","size":5842},{"name":"interpolate","children":[{"name":"ArrayInterpolator","size":1983},{"name":"ColorInterpolator","size":2047},{"name":"DateInterpolator","size":1375},{"name":"Interpolator","size":8746},{"name":"MatrixInterpolator","size":2202},{"name":"NumberInterpolator","size":1382},{"name":"ObjectInterpolator","size":1629},{"name":"PointInterpolator","size":1675},{"name":"RectangleInterpolator","size":2042}]},{"name":"ISchedulable","size":1041},{"name":"Parallel","size":5176},{"name":"Pause","size":449},{"name":"Scheduler","size":5593},{"name":"Sequence","size":5534},{"name":"Transition","size":9201},{"name":"Transitioner","size":19975},{"name":"TransitionEvent","size":1116},{"name":"Tween","size":6006}]},{"name":"data","children":[{"name":"converters","children":[{"name":"Converters","size":721},{"name":"DelimitedTextConverter","size":4294},{"name":"GraphMLConverter","size":9800},{"name":"IDataConverter","size":1314},{"name":"JSONConverter","size":2220}]},{"name":"DataField","size":1759},{"name":"DataSchema","size":2165},{"name":"DataSet","size":586},{"name":"DataSource","size":3331},{"name":"DataTable","size":772},{"name":"DataUtil","size":3322}]}]},"options":{"height":null,"width":null,"fontSize":10,"fontFamily":"serif","linkColour":"#ccc","nodeColour":"#fff","nodeStroke":"steelblue","textColour":"#111","margin":{"top":null,"right":null,"bottom":null,"left":null},"opacity":0.9}},"evals":[],"jsHooks":[]}</script>
<a href="#sankey">
<h3 id="sankey">
<code>&gt; dendroNetwork</code>
</h3>
<p></a></p>
<p>From version 0.2, it is also possible to create dendrograms using <code>dendroNetwork</code>.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">hc &lt;-<span class="st"> </span><span class="kw">hclust</span>(<span class="kw">dist</span>(USArrests), <span class="st">&quot;ave&quot;</span>)

<span class="kw">dendroNetwork</span>(hc, <span class="dt">height =</span> <span class="dv">600</span>)</code></pre></div>
<div id="htmlwidget-819a471a894131435d32" style="width:800px;height:600px;" class="dendroNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-819a471a894131435d32">{"x":{"root":{"name":"","y":152.313999380806,"children":[{"name":"","y":77.6050243110769,"children":[{"name":"","y":38.5279119600323,"children":[{"name":"Florida","y":0,"textColour":"#111","textOpacity":0.9},{"name":"North Carolina","y":0,"textColour":"#111","textOpacity":0.9}]},{"name":"","y":44.283921672634,"children":[{"name":"","y":28.0122112970931,"children":[{"name":"California","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":15.4531200289137,"children":[{"name":"Maryland","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":13.8960426021224,"children":[{"name":"Arizona","y":0,"textColour":"#111","textOpacity":0.9},{"name":"New Mexico","y":0,"textColour":"#111","textOpacity":0.9}]}]}]},{"name":"","y":39.3946331306859,"children":[{"name":"","y":26.3634282396782,"children":[{"name":"","y":16.8914988216046,"children":[{"name":"Delaware","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":15.4544491975612,"children":[{"name":"Alabama","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Louisiana","y":0,"textColour":"#111","textOpacity":0.9}]}]},{"name":"","y":18.4173313943456,"children":[{"name":"","y":6.23698645180507,"children":[{"name":"Illinois","y":0,"textColour":"#111","textOpacity":0.9},{"name":"New York","y":0,"textColour":"#111","textOpacity":0.9}]},{"name":"","y":13.2973681606549,"children":[{"name":"Michigan","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Nevada","y":0,"textColour":"#111","textOpacity":0.9}]}]}]},{"name":"","y":28.0958028692397,"children":[{"name":"Alaska","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":21.1671915945408,"children":[{"name":"Mississippi","y":0,"textColour":"#111","textOpacity":0.9},{"name":"South Carolina","y":0,"textColour":"#111","textOpacity":0.9}]}]}]}]}]},{"name":"","y":89.232093175428,"children":[{"name":"","y":44.8379332309712,"children":[{"name":"","y":26.7137768982926,"children":[{"name":"","y":16.425489079327,"children":[{"name":"Washington","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":12.8780996471237,"children":[{"name":"Oregon","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":10.7367388186717,"children":[{"name":"Wyoming","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":7.35527021937332,"children":[{"name":"Oklahoma","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Virginia","y":0,"textColour":"#111","textOpacity":0.9}]}]}]}]},{"name":"","y":22.5959782848049,"children":[{"name":"Rhode Island","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":11.4564392373896,"children":[{"name":"Massachusetts","y":0,"textColour":"#111","textOpacity":0.9},{"name":"New Jersey","y":0,"textColour":"#111","textOpacity":0.9}]}]}]},{"name":"","y":29.0541950311957,"children":[{"name":"","y":20.1984786527384,"children":[{"name":"Missouri","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":12.6142776249772,"children":[{"name":"Arkansas","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Tennessee","y":0,"textColour":"#111","textOpacity":0.9}]}]},{"name":"","y":23.9721425454471,"children":[{"name":"Georgia","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":14.5010344458594,"children":[{"name":"Colorado","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Texas","y":0,"textColour":"#111","textOpacity":0.9}]}]}]}]},{"name":"","y":54.7468308127929,"children":[{"name":"","y":20.5985066190634,"children":[{"name":"","y":15.0261072725121,"children":[{"name":"Idaho","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":12.4386917531679,"children":[{"name":"Nebraska","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":3.83405790253616,"children":[{"name":"Kentucky","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Montana","y":0,"textColour":"#111","textOpacity":0.9}]}]}]},{"name":"","y":15.1228971665018,"children":[{"name":"","y":6.63777071011044,"children":[{"name":"Ohio","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Utah","y":0,"textColour":"#111","textOpacity":0.9}]},{"name":"","y":13.3522599960709,"children":[{"name":"","y":3.9293765408777,"children":[{"name":"Indiana","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Kansas","y":0,"textColour":"#111","textOpacity":0.9}]},{"name":"","y":8.02745289615579,"children":[{"name":"Connecticut","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Pennsylvania","y":0,"textColour":"#111","textOpacity":0.9}]}]}]}]},{"name":"","y":41.0947650735165,"children":[{"name":"Hawaii","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":33.1178150270327,"children":[{"name":"","y":10.7711752200225,"children":[{"name":"West Virginia","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":8.5375640553966,"children":[{"name":"Maine","y":0,"textColour":"#111","textOpacity":0.9},{"name":"South Dakota","y":0,"textColour":"#111","textOpacity":0.9}]}]},{"name":"","y":27.7799038518465,"children":[{"name":"","y":13.0449223838243,"children":[{"name":"North Dakota","y":0,"textColour":"#111","textOpacity":0.9},{"name":"Vermont","y":0,"textColour":"#111","textOpacity":0.9}]},{"name":"","y":18.993397505721,"children":[{"name":"Minnesota","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":10.1842178699022,"children":[{"name":"Wisconsin","y":0,"textColour":"#111","textOpacity":0.9},{"name":"","y":2.29128784747792,"children":[{"name":"Iowa","y":0,"textColour":"#111","textOpacity":0.9},{"name":"New Hampshire","y":0,"textColour":"#111","textOpacity":0.9}]}]}]}]}]}]}]}]}]},"options":{"height":600,"width":800,"fontSize":10,"linkColour":"#ccc","nodeColour":"#fff","nodeStroke":"steelblue","textRotate":0,"margins":{"top":40,"right":150,"bottom":40,"left":40},"opacity":0.9,"linkType":"elbow","treeOrientation":"horizontal","zoom":false}},"evals":[],"jsHooks":[]}</script>
<h2 id="igraph">
Interacting with igraph
</h2>
<p>You can use <a href="http://igraph.org/r/">igraph</a> to create network graph data that can be plotted with <strong>networkD3</strong>. The <code>igraph_to_networkD3</code> function converts igraph graphs to lists that work well with <strong>networkD3</strong>. For example:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># Load igraph</span>
<span class="kw">library</span>(igraph)

<span class="co"># Use igraph to make the graph and find membership</span>
karate &lt;-<span class="st"> </span><span class="kw">make_graph</span>(<span class="st">&quot;Zachary&quot;</span>)
wc &lt;-<span class="st"> </span><span class="kw">cluster_walktrap</span>(karate)
members &lt;-<span class="st"> </span><span class="kw">membership</span>(wc)

<span class="co"># Convert to object suitable for networkD3</span>
karate_d3 &lt;-<span class="st"> </span><span class="kw">igraph_to_networkD3</span>(karate, <span class="dt">group =</span> members)

<span class="co"># Create force directed network plot</span>
<span class="kw">forceNetwork</span>(<span class="dt">Links =</span> karate_d3$links, <span class="dt">Nodes =</span> karate_d3$nodes, 
             <span class="dt">Source =</span> <span class="st">&#39;source&#39;</span>, <span class="dt">Target =</span> <span class="st">&#39;target&#39;</span>, 
             <span class="dt">NodeID =</span> <span class="st">&#39;name&#39;</span>, <span class="dt">Group =</span> <span class="st">&#39;group&#39;</span>)</code></pre></div>
<div id="htmlwidget-675860c6b3dce8f98b19" style="width:672px;height:480px;" class="forceNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-675860c6b3dce8f98b19">{"x":{"links":{"source":[0,0,1,0,1,2,0,0,0,5,4,0,1,3,2,2,0,2,5,4,0,0,0,3,3,2,0,1,5,6,0,1,1,0,1,0,23,24,23,24,2,2,26,23,8,1,0,28,25,24,20,8,15,2,22,31,14,30,29,23,18,9,8,28,20,14,30,15,18,19,26,27,22,13,29,23,31,32],"target":[1,2,2,3,3,3,4,5,6,6,6,7,7,7,7,8,8,9,10,10,10,11,12,12,13,13,13,13,16,16,17,17,19,19,21,21,25,25,27,27,27,28,29,29,30,30,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33],"colour},"nodes":{"name":["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34"],"group":[1,1,2,1,5,5,5,1,2,2,5,1,1,2,3,3,5,1,3,1,3,1,3,4,4,4,3,4,2,3,2,2,3,3]},"options":{"NodeID":"name","Group":"group","colourScale":"d3.scale.category20()","fontSize":7,"fontFamily":"serif","clickTextSize":17.5,"linkDistance":50,"linkWidth":"function(d) { return Math.sqrt(d.value); }","charge":-120,"opacity":0.6,"zoom":false,"legend":false,"nodesize":false,"radiusCalculation":" Math.sqrt(d.nodesize)+6","bounded":false,"opacityNoHover":0,"clickAction":null}},"evals":[],"jsHooks":[]}</script>
<h2 id="networkD3output">
<i class="fa fa-floppy-o"></i> Output
</h2>
<div id="saving-to-an-external-stand-alone-html-file" class="section level3">
<h3>Saving to an external stand alone HTML file</h3>
<p>Use <code>saveNetwork</code> to save a network to a stand alone HTML file:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">library</span>(magrittr)

<span class="kw">simpleNetwork</span>(networkData) %&gt;%
<span class="kw">saveNetwork</span>(<span class="dt">file =</span> <span class="st">&#39;Net1.html&#39;</span>)</code></pre></div>
</div>
<div id="including-in-an-rmarkdown-file" class="section level3">
<h3>Including in an RMarkdown file</h3>
<p>It is simple to include a <strong>networkD3</strong> graphic in an <a href="http://rmarkdown.rstudio.com/">RMarkdown</a> file. Simply place the code to create the graph in a code chunk the same way you would any other plot. Checkout this <a href="https://github.com/christophergandrud/networkD3/blob/master/inst/examples/examples.Rmd">simple example</a>.</p>
</div>
<div id="including-in-shiny-web-apps" class="section level3">
<h3>Including in Shiny web apps</h3>
<p>You can also easily include <strong>networkD3</strong> graphs in <a href="http://shiny.rstudio.com/">Shiny web apps</a>.</p>
<p>In the <em>server.R</em> file create the graph by placing the function inside of <code>render*Network</code>, where the <code>*</code> is either <code>Simple</code>, <code>Force</code>, or <code>Sankey</code> depending on the graph type. For example:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">output$force &lt;-<span class="st"> </span><span class="kw">renderForceNetwork</span>({
<span class="kw">forceNetwork</span>(<span class="dt">Links =</span> MisLinks, <span class="dt">Nodes =</span> MisNodes,
            <span class="dt">Source =</span> <span class="st">&quot;source&quot;</span>, <span class="dt">Target =</span> <span class="st">&quot;target&quot;</span>,
            <span class="dt">Value =</span> <span class="st">&quot;value&quot;</span>, <span class="dt">NodeID =</span> <span class="st">&quot;name&quot;</span>,
            <span class="dt">Group =</span> <span class="st">&quot;group&quot;</span>, <span class="dt">opacity =</span> input$opacity)
})</code></pre></div>
<p>In the <code>shinyUI</code> part of your <em>app.R</em> file (for <a href="http://shiny.rstudio.com/articles/single-file.html">single-file Shiny apps</a>) include <code>*NetworkOutput</code> (with <code>*</code> as before, but starting with a lowercase letter). The argument placed in this function should be the element specified with <code>output</code>, e.g.:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">forceNetworkOutput</span>(<span class="st">&quot;force&quot;</span>)</code></pre></div>
<p>You can run a simple example with the following code:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">shiny::<span class="kw">runGitHub</span>(<span class="st">&#39;christophergandrud/networkD3-shiny-example&#39;</span>)</code></pre></div>
<p>Full source code for this example can be found <a href="https://github.com/christophergandrud/networkD3-shiny-example">here</a>.</p>
</div>
<div id="saving-as-static-png-image" class="section level3">
<h3>Saving as static PNG image</h3>
<p>You can use RStudio to save static images of <strong>networkD3</strong> plots as PNG files. Simply create your plot as usual in RStudio. The output should appear in the <em>Viewer</em> pane. Then click <em>Export</em> &gt; <em>Save as Image…</em>. A new window will appear. You can use this window to manipulate the plot, resize it, and save the result as a PNG file.</p>
<p><img class="display" src="img/networkD3_save_PNG.gif" height=300 width=400 alt="RStudio-save-plot-as-image"></p>
<p><br><br></p>
<hr>
<div id="disqus_thread">

</div>
<script type="text/javascript">
/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
var disqus_shortname = 'networkd3'; // required: replace example with your forum shortname

/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>
Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
</noscript>
<p><a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a></p>
</div>

<hr>

<br>

<a href="http://nadrosia.tumblr.com/post/53520500877/made-in-berlin-badge-update"><img alt="BerlinBadge" src="http://media.tumblr.com/023c285c14ef01953d3b67ffe789004d/tumblr_inline_mor1uu2OOZ1qz4rgp.png" width = "100" align = "right"></a>

<p><a href="https://github.com/christophergandrud">Christopher Gandrud <i class="fa fa-github fa-lg"></i></a> <a href="https://twitter.com/ChrisGandrud"><i class="fa fa-twitter"></i></a></p>

<p><strong><code>networkD3</code></strong> is covered under the <a href="https://www.gnu.org/licenses/quick-guide-gplv3.html">GPL-3 license</a>.</p>

<p>This site is covered under a <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC By-NC-SA 4.0 License</a>.</p>

<br>

<div class="rect1"></div>


<!-- dynamically load mathjax for compatibility with self-contained -->
<script>
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
</script>

</body>
</html>
